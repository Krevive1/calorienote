name: iOS Release (TestFlight)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.1)'
        required: true
        default: '1.2.1'
      build_number:
        description: 'Build number (e.g., 49)'
        required: true
        default: '49'
      release_notes:
        description: 'Release notes for TestFlight'
        required: false
        default: 'Bug fixes and improvements'

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        
    - name: Install dependencies
      run: flutter pub get

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Install CocoaPods
      env:
        GIT_TERMINAL_PROMPT: 0
      run: |
        gem install cocoapods -v 1.15.2 --no-document
        pod --version
      
    - name: Setup iOS dependencies
      env:
        COCOAPODS_DISABLE_STATS: 'true'
        GIT_TERMINAL_PROMPT: 0
      run: |
        set -euo pipefail
        cd ios
        rm -rf Pods Podfile.lock
        pod install --repo-update --verbose
      
    - name: Update version
      run: |
        # Update pubspec.yaml version
        sed -i '' "s/version: .*/version: ${{ github.event.inputs.version }}+${{ github.event.inputs.build_number }}/" pubspec.yaml
        echo "Updated version to ${{ github.event.inputs.version }}+${{ github.event.inputs.build_number }}"
      
    - name: Build iOS IPA with App Store Connect API signing
      env:
        ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
        ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        ASC_API_KEY_P8: ${{ secrets.ASC_API_KEY_P8 }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
      run: |
        flutter clean
        flutter pub get
        cd ios
        pod install
        cd ..
        
        # Create export options for App Store Connect API signing (distribution)
        cat > exportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>${{ secrets.APPLE_TEAM_ID }}</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
        </dict>
        </plist>
        EOF
        
        # Archive (generic iOS device) with automatic signing - capture full output
        cd ios
        set +e
        xcrun xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -destination 'generic/platform=iOS' \
          -configuration Release \
          -archivePath build/Runner.xcarchive \
          -allowProvisioningUpdates \
          DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }} \
          CODE_SIGN_STYLE=Automatic \
          CODE_SIGN_IDENTITY="Apple Distribution" \
          archive 2>&1 | tee archive.log
        
        ARCHIVE_EXIT_CODE=$?
        echo "Archive exit code: $ARCHIVE_EXIT_CODE"
        
        if [ $ARCHIVE_EXIT_CODE -ne 0 ]; then
          echo "=== ARCHIVE FAILED - FULL LOG ==="
          cat archive.log
          echo "=== END ARCHIVE LOG ==="
          exit $ARCHIVE_EXIT_CODE
        fi
        
        set -e
        
        # Export IPA
        xcodebuild -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportPath build/ios/ipa \
          -exportOptionsPlist ../exportOptions.plist \
          -allowProvisioningUpdates
        
        cd ..
      
    - name: Upload to TestFlight
      env:
        ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
        ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        ASC_API_KEY_P8: ${{ secrets.ASC_API_KEY_P8 }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
        APP_STORE_APP_ID: ${{ secrets.APP_STORE_APP_ID }}
      run: |
        # Install fastlane
        gem install fastlane
        
        # Create fastlane configuration
        mkdir -p fastlane
        cat > fastlane/Appfile << EOF
        app_identifier("${{ secrets.APP_IDENTIFIER }}")
        team_id("${{ secrets.APPLE_TEAM_ID }}")
        EOF
        
        # Upload to TestFlight
        fastlane pilot upload \
          --ipa "ios/build/ios/ipa/Runner.ipa" \
          --api_key_id "${{ secrets.ASC_KEY_ID }}" \
          --api_key_issuer_id "${{ secrets.ASC_ISSUER_ID }}" \
          --api_key "${{ secrets.ASC_API_KEY_P8 }}" \
          --app_id "${{ secrets.APP_STORE_APP_ID }}" \
          --changelog "${{ github.event.inputs.release_notes }}"
      
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-release-ipa
        path: ios/build/ios/ipa/
        retention-days: 30
